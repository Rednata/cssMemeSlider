:root {
  --main: #141633;
  --text: #fff;
  --accent: tomato;
}
html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  /* min-width: 320px; */
  min-height: 100vh;
  font-family: Arial, sans-serif;
  background-color: #141633;
  color: #fff;
  font-size: 20px;
}


img, svg {
  max-width: 100%;
  max-height: 100%;
  height: auto;
}


button {
  padding: 0;
  cursor: pointer;
}

a {
  text-decoration: none;
  color: inherit;
}

ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

h1,
h2,
h3,
p,
figure,
fieldset {
  margin: 0;
}

/*
Пример контейнера
Если контейнер 1180px по макету,
то для max-width прибавляем паддинги 30px*2,
в итоге 1240px
Чтобы контент не прижимался к краям экрана
*/

.container {
  max-width: 80%;
  padding: 0 10%;
  margin: 0 auto;
  border: 1px solid red;
}

.wrap {
  border: 1px solid blueviolet;
  padding-top: 100px;
  display: grid;
  grid-template-areas:
    'slider slider'
    'content control';
  justify-content: space-between;
  row-gap: 20px;
  padding: 20px;
}

img {
  border-radius: 20px;
}

.control {
  grid-area: control;
  justify-self: flex-end;
  display: flex;
  gap: 3px;
}


.control__input {
  cursor: pointer;
  appearance: none;
}

.control__label {
  display: block;
  cursor: pointer;
  padding: 10px 5px;
}

.control__label span {
  display: block;
  width: 15px;
  height: 15px;
  border-radius: 50%;
  background-color: var(--accent);
  border: 2px solid var(--accent);
  transition: background-color 0.3s ease-in-out, border-color 0.3s ease-in-out;
}

.control__label:hover span{
  background-color: #fff;
  border-color: var(--text);
  transition: background-color 0.3s ease-in-out, border-color 0.3s ease-in-out;
}

.control__label:has(+.control__input:checked) span{
  border-color: var(--accent);
  background-color: var(--main);
  transition: border-color 0.3s ease-in-out, background-color 0.3s ease-in-out;
}

.control__label:has(+.control__input:checked):hover span{
  border-color: var(--text);
  transition: border-color 0.3s ease-in-out;
}

.slider {
  grid-area: slider;
  display: flex;
}

.content {
  grid-area: content;
}

.slide_1 {
  display: none;
}
.control:has(.control__input[id='mem1']:checked)+.slider .slide_1[data='mem1']  {
  display: block;
}
.control:has(.control__input[id='mem2']:checked)+.slider .slide_1[data='mem2']  {
  display: block;
}
.control:has(.control__input[id='mem3']:checked)+.slider .slide_1[data='mem3']  {
  display: block;
}
.control:has(.control__input[id='mem4']:checked)+.slider .slide_1[data='mem4']  {
  display: block;
}

